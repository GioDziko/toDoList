{"version":3,"sources":["components/Form.jsx","components/ToDo.jsx","components/ToDoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","inputText","toDolist","settoDolist","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","ToDo","todo","map","item","filter","el","ToDoList","filteredTodos","App","useState","status","setfilteredTodos","useEffect","saveToLocalStorage","localStorage","getItem","setItem","JSON","stringify","parse","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4731b19.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({setInputText,inputText,toDolist,settoDolist,setStatus}) => {\r\n    \r\n    const inputTextHandler=(e)=>{\r\n        setInputText(e.target.value);\r\n        \r\n    }\r\n    \r\n    const submitTextHandler=(e)=>{\r\n        e.preventDefault();\r\n        settoDolist([...toDolist,{text:inputText, completed:false, id:Math.random()*1000}]);\r\n        setInputText('');\r\n    }\r\n\r\n    const statusChanger=(e)=>{\r\n        setStatus(e.target.value);\r\n    }\r\n    return (\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n            <button onClick={submitTextHandler} className=\"todo-button\" type=\"submit\">\r\n            <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n            <select onChange={statusChanger} name=\"todos\" className=\"filter-todo\">\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"uncompleted\">Uncompleted</option>\r\n            </select>\r\n            </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst ToDo = ({todo,settoDolist,toDolist}) => {\r\n\r\n    const deleteHandler=()=>{\r\n        settoDolist(toDolist.filter((el)=>el.id !== todo.id));\r\n    }\r\n    const completeHandler=()=>{\r\n        settoDolist(toDolist.map(item=>{\r\n            if(item.id==todo.id){\r\n                return {...item, completed: !item.completed}\r\n            }\r\n            return item \r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed && 'completed'}`}>{todo.text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\" >\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\" >\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToDo\r\n","import React from 'react'\r\nimport ToDo from './ToDo';\r\n\r\nconst ToDoList = ({toDolist,settoDolist,filteredTodos}) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map(item=>(\r\n                    <ToDo toDolist={toDolist} todo={item} key={item.id}  settoDolist={settoDolist} filteredTodos={filteredTodos} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList\r\n","import './App.css'\nimport Form from './components/Form';\nimport Todo from './components/ToDoList';\nimport React, {useState,useEffect} from 'react';\n\nfunction App() {\n  const [inputText,setInputText]=useState(\"\");\n  const [toDolist,settoDolist]=useState([]);\n  const [status,setStatus]=useState('All');\n  const [filteredTodos,setfilteredTodos]=useState([]);\n\n  useEffect(() => {\n    saveToLocalStorage();\n  }, []);\n\n  const saveToLocalStorage=()=>{\n    if(localStorage.getItem(\"todos\")===null){\n      localStorage.setItem(\"todos\" , JSON.stringify([]));\n    }\n    settoDolist(JSON.parse(localStorage.getItem('todos')));\n  }\n\n  useEffect(() => {\n    filterHandler();\n    localStorage.setItem(\"todos\" , JSON.stringify(toDolist));\n  }, [toDolist , status ])\n\n  const filterHandler=()=>{\n    switch(status){\n      case \"completed\":\n        setfilteredTodos(toDolist.filter(item=>item.completed === true));\n        break;\n      case \"uncompleted\":\n        setfilteredTodos(toDolist.filter(item=>item.completed === false));\n        break;\n      default:\n        setfilteredTodos(toDolist);\n        break;\n    }\n  };\n  \n  return (\n    <div>\n      <header>\n        <h1>To Do List</h1>\n      </header>\n      <Form settoDolist={settoDolist} \n      toDolist={toDolist} \n      inputText={inputText} \n      setInputText={setInputText} \n      setStatus={setStatus}\n       />\n      <Todo toDolist={toDolist} settoDolist={settoDolist} filteredTodos={filteredTodos} />\n      <footer>Create by Giorgi Dzirkvelishvili</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}